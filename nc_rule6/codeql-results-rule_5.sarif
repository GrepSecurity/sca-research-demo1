{"$schema":"https://json.schemastore.org/sarif-2.1.0.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"CodeQL","organization":"GitHub","semanticVersion":"2.22.2","notifications":[{"id":"java/baseline/expected-extracted-files","name":"java/baseline/expected-extracted-files","shortDescription":{"text":"Expected extracted files"},"fullDescription":{"text":"Files appearing in the source archive that are expected to be extracted."},"defaultConfiguration":{"enabled":true},"properties":{"tags":["expected-extracted-files","telemetry"]}},{"id":"cli/platform","name":"cli/platform","shortDescription":{"text":"Platform"},"fullDescription":{"text":"Platform"},"defaultConfiguration":{"enabled":true}},{"id":"cli/sip-enablement","name":"cli/sip-enablement","shortDescription":{"text":"macOS SIP enablement status"},"fullDescription":{"text":"macOS SIP enablement status"},"defaultConfiguration":{"enabled":true}}],"rules":[{"id":"java/underscore-identifier","name":"java/underscore-identifier","shortDescription":{"text":"Underscore used as identifier"},"fullDescription":{"text":"Use of a single underscore character as an identifier results in a compiler error with Java source level 9 or later."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability"],"description":"Use of a single underscore character as an identifier\n              results in a compiler error with Java source level 9 or later.","id":"java/underscore-identifier","kind":"problem","name":"Underscore used as identifier","precision":"high","problem.severity":"recommendation"}},{"id":"java/jdk-internal-api-access","name":"java/jdk-internal-api-access","shortDescription":{"text":"Access to unsupported JDK-internal API"},"fullDescription":{"text":"Use of unsupported JDK-internal APIs may cause compatibility issues when upgrading to newer versions of Java, in particular Java 9."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability"],"description":"Use of unsupported JDK-internal APIs may cause compatibility issues\n              when upgrading to newer versions of Java, in particular Java 9.","id":"java/jdk-internal-api-access","kind":"problem","name":"Access to unsupported JDK-internal API","precision":"high","problem.severity":"recommendation"}},{"id":"java/uncaught-number-format-exception","name":"java/uncaught-number-format-exception","shortDescription":{"text":"Missing catch of NumberFormatException"},"fullDescription":{"text":"Calling a string to number conversion method without handling 'NumberFormatException' may cause unexpected runtime exceptions."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","reliability","error-handling","external/cwe/cwe-248"],"description":"Calling a string to number conversion method without handling\n              'NumberFormatException' may cause unexpected runtime exceptions.","id":"java/uncaught-number-format-exception","kind":"problem","name":"Missing catch of NumberFormatException","precision":"high","problem.severity":"recommendation"}},{"id":"java/ignored-error-status-of-call","name":"java/ignored-error-status-of-call","shortDescription":{"text":"Ignored error status of call"},"fullDescription":{"text":"Ignoring an exceptional value that is returned by a method may cause subsequent code to fail."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","reliability","error-handling","external/cwe/cwe-391"],"description":"Ignoring an exceptional value that is returned by a method may cause subsequent\n              code to fail.","id":"java/ignored-error-status-of-call","kind":"problem","name":"Ignored error status of call","precision":"high","problem.severity":"recommendation"}},{"id":"java/call-to-object-tostring","name":"java/call-to-object-tostring","shortDescription":{"text":"Use of default toString()"},"fullDescription":{"text":"Calling the default implementation of 'toString' returns a value that is unlikely to be what you expect."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","reliability","correctness"],"description":"Calling the default implementation of 'toString' returns a value that is unlikely to\n              be what you expect.","id":"java/call-to-object-tostring","kind":"problem","name":"Use of default toString()","precision":"high","problem.severity":"recommendation"}},{"id":"java/do-not-call-finalize","name":"java/do-not-call-finalize","shortDescription":{"text":"Do not call `finalize()`"},"fullDescription":{"text":"Calling `finalize()` in application code may cause inconsistent program state or unpredictable behavior."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","performance","external/cwe/cwe-586"],"description":"Calling `finalize()` in application code may cause\n              inconsistent program state or unpredictable behavior.","id":"java/do-not-call-finalize","kind":"problem","name":"Do not call `finalize()`","precision":"high","previous-id":"java/do-not-use-finalizers","problem.severity":"error"}},{"id":"java/print-array","name":"java/print-array","shortDescription":{"text":"Implicit conversion from array to string"},"fullDescription":{"text":"Directly printing an array, without first converting the array to a string, produces unreadable results."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","reliability","correctness"],"description":"Directly printing an array, without first converting the array to a string,\n              produces unreadable results.","id":"java/print-array","kind":"problem","name":"Implicit conversion from array to string","precision":"very-high","problem.severity":"recommendation"}},{"id":"java/useless-tostring-call","name":"java/useless-tostring-call","shortDescription":{"text":"Useless toString on String"},"fullDescription":{"text":"Calling 'toString' on a string is redundant."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","useless-code"],"description":"Calling 'toString' on a string is redundant.","id":"java/useless-tostring-call","kind":"problem","name":"Useless toString on String","precision":"high","problem.severity":"recommendation"}},{"id":"java/internal-representation-exposure","name":"java/internal-representation-exposure","shortDescription":{"text":"Exposing internal representation"},"fullDescription":{"text":"An object that accidentally exposes its internal representation may allow the object's fields to be modified in ways that the object is not prepared to handle."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","reliability","correctness","modularity","external/cwe/cwe-485"],"description":"An object that accidentally exposes its internal representation may allow the\n              object's fields to be modified in ways that the object is not prepared to handle.","id":"java/internal-representation-exposure","kind":"problem","name":"Exposing internal representation","precision":"high","problem.severity":"recommendation"}},{"id":"java/abstract-to-concrete-cast","name":"java/abstract-to-concrete-cast","shortDescription":{"text":"Cast from abstract to concrete collection"},"fullDescription":{"text":"A cast from an abstract collection to a concrete implementation type makes the code brittle."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","maintainability","complexity","modularity","external/cwe/cwe-485"],"description":"A cast from an abstract collection to a concrete implementation type makes the\n              code brittle.","id":"java/abstract-to-concrete-cast","kind":"problem","name":"Cast from abstract to concrete collection","precision":"very-high","problem.severity":"warning"}},{"id":"java/non-null-boxed-variable","name":"java/non-null-boxed-variable","shortDescription":{"text":"Boxed variable is never null"},"fullDescription":{"text":"Using a boxed type for a variable that is never assigned 'null' hinders readability because it implies that 'null' is a potential value."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","maintainability","readability","types"],"description":"Using a boxed type for a variable that is never assigned 'null'\n              hinders readability because it implies that 'null' is a potential value.","id":"java/non-null-boxed-variable","kind":"problem","name":"Boxed variable is never null","precision":"very-high","problem.severity":"warning"}},{"id":"java/constants-only-interface","name":"java/constants-only-interface","shortDescription":{"text":"Constant interface anti-pattern"},"fullDescription":{"text":"Implementing an interface (or extending an abstract class) only to put a number of constant definitions into scope is considered bad practice."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability","modularity"],"description":"Implementing an interface (or extending an abstract class)\n              only to put a number of constant definitions into scope is considered bad practice.","id":"java/constants-only-interface","kind":"problem","name":"Constant interface anti-pattern","precision":"high","problem.severity":"recommendation"}},{"id":"java/confusing-method-signature","name":"java/confusing-method-signature","shortDescription":{"text":"Confusing overloading of methods"},"fullDescription":{"text":"Overloaded methods that have the same number of parameters, where each pair of corresponding parameter types is convertible by casting or autoboxing, may be confusing."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability","naming"],"description":"Overloaded methods that have the same number of parameters, where each pair of\n              corresponding parameter types is convertible by casting or autoboxing, may be\n              confusing.","id":"java/confusing-method-signature","kind":"problem","name":"Confusing overloading of methods","precision":"high","problem.severity":"recommendation"}},{"id":"java/subtle-inherited-call","name":"java/subtle-inherited-call","shortDescription":{"text":"Subtle call to inherited method"},"fullDescription":{"text":"An unqualified call to a method that exists with the same signature in both a superclass and an outer class is ambiguous."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","maintainability","readability"],"description":"An unqualified call to a method that exists with the same signature in both a\n              superclass and an outer class is ambiguous.","id":"java/subtle-inherited-call","kind":"problem","name":"Subtle call to inherited method","precision":"very-high","problem.severity":"warning"}},{"id":"java/class-name-matches-super-class","name":"java/class-name-matches-super-class","shortDescription":{"text":"Class has same name as super class"},"fullDescription":{"text":"A class that has the same name as its superclass may be confusing."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability","naming"],"description":"A class that has the same name as its superclass may be confusing.","id":"java/class-name-matches-super-class","kind":"problem","name":"Class has same name as super class","precision":"high","problem.severity":"recommendation"}},{"id":"java/confusing-method-name","name":"java/confusing-method-name","shortDescription":{"text":"Confusing method names because of capitalization"},"fullDescription":{"text":"Methods in the same class whose names differ only in capitalization are confusing."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability","naming"],"description":"Methods in the same class whose names differ only in capitalization are\n              confusing.","id":"java/confusing-method-name","kind":"problem","name":"Confusing method names because of capitalization","precision":"high","problem.severity":"recommendation"}},{"id":"java/local-shadows-field","name":"java/local-shadows-field","shortDescription":{"text":"Possible confusion of local and field"},"fullDescription":{"text":"A method in which a variable is declared with the same name as a field is difficult to understand."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability"],"description":"A method in which a variable is declared with the same name as a field is difficult\n              to understand.","id":"java/local-shadows-field","kind":"problem","name":"Possible confusion of local and field","precision":"high","problem.severity":"recommendation"}},{"id":"java/unused-label","name":"java/unused-label","shortDescription":{"text":"Unused label"},"fullDescription":{"text":"An unused label for a loop or 'switch' statement is either redundant or indicates incorrect 'break' or 'continue' statements."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","useless-code","external/cwe/cwe-561"],"description":"An unused label for a loop or 'switch' statement is either redundant or indicates\n              incorrect 'break' or 'continue' statements.","id":"java/unused-label","kind":"problem","name":"Unused label","precision":"high","problem.severity":"recommendation"}},{"id":"java/unimplementable-interface","name":"java/unimplementable-interface","shortDescription":{"text":"Interface cannot be implemented"},"fullDescription":{"text":"An interface method that is incompatible with a protected method on 'java.lang.Object' means that the interface cannot be implemented."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","maintainability","useless-code"],"description":"An interface method that is incompatible with a protected method on\n              'java.lang.Object' means that the interface cannot be implemented.","id":"java/unimplementable-interface","kind":"problem","name":"Interface cannot be implemented","precision":"very-high","problem.severity":"warning"}},{"id":"java/local-variable-is-never-read","name":"java/local-variable-is-never-read","shortDescription":{"text":"Unread local variable"},"fullDescription":{"text":"A local variable that is never read is redundant."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","useless-code","external/cwe/cwe-561"],"description":"A local variable that is never read is redundant.","id":"java/local-variable-is-never-read","kind":"problem","name":"Unread local variable","precision":"high","problem.severity":"recommendation"}},{"id":"java/unused-reference-type","name":"java/unused-reference-type","shortDescription":{"text":"Unused classes and interfaces"},"fullDescription":{"text":"A non-public class or interface that is not used anywhere in the program wastes programmer resources."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","useless-code","external/cwe/cwe-561"],"description":"A non-public class or interface that is not used anywhere in the program wastes\n              programmer resources.","id":"java/unused-reference-type","kind":"problem","name":"Unused classes and interfaces","precision":"high","problem.severity":"recommendation"}},{"id":"java/unused-parameter","name":"java/unused-parameter","shortDescription":{"text":"Useless parameter"},"fullDescription":{"text":"Parameters that are not used add unnecessary complexity to an interface."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","useless-code","external/cwe/cwe-561"],"description":"Parameters that are not used add unnecessary complexity to an interface.","id":"java/unused-parameter","kind":"problem","name":"Useless parameter","precision":"high","problem.severity":"recommendation"}},{"id":"java/empty-method","name":"java/empty-method","shortDescription":{"text":"Empty method"},"fullDescription":{"text":"An empty method serves no purpose and makes code less readable. An empty method may indicate an error on the part of the developer."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["correctness","maintainability","readability","quality","external/cwe/cwe-1071"],"description":"An empty method serves no purpose and makes code less readable. An empty method may\n              indicate an error on the part of the developer.","id":"java/empty-method","kind":"problem","name":"Empty method","precision":"medium","problem.severity":"recommendation"}},{"id":"java/useless-null-check","name":"java/useless-null-check","shortDescription":{"text":"Useless null check"},"fullDescription":{"text":"Checking whether an expression is null when that expression cannot possibly be null is useless."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","maintainability","useless-code","external/cwe/cwe-561"],"description":"Checking whether an expression is null when that expression cannot\n              possibly be null is useless.","id":"java/useless-null-check","kind":"problem","name":"Useless null check","precision":"very-high","problem.severity":"warning"}},{"id":"java/useless-type-test","name":"java/useless-type-test","shortDescription":{"text":"Useless type test"},"fullDescription":{"text":"Testing whether a derived type is an instance of its base type is unnecessary."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","maintainability","useless-code","language-features","external/cwe/cwe-561"],"description":"Testing whether a derived type is an instance of its base type is unnecessary.","id":"java/useless-type-test","kind":"problem","name":"Useless type test","precision":"very-high","problem.severity":"warning"}},{"id":"java/type-variable-hides-type","name":"java/type-variable-hides-type","shortDescription":{"text":"Type variable hides another type"},"fullDescription":{"text":"A type variable with the same name as another type that is in scope can cause the two types to be confused."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["reliability","readability","types","quality"],"description":"A type variable with the same name as another type that is in scope can cause\n              the two types to be confused.","id":"java/type-variable-hides-type","kind":"problem","name":"Type variable hides another type","precision":"medium","problem.severity":"warning"}},{"id":"java/iterable-wraps-iterator","name":"java/iterable-wraps-iterator","shortDescription":{"text":"Iterable wrapping an iterator"},"fullDescription":{"text":"An 'Iterable' that reuses an 'Iterator' instance does not support multiple traversals and can lead to unexpected behavior."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness"],"description":"An 'Iterable' that reuses an 'Iterator' instance does not support multiple traversals\n              and can lead to unexpected behavior.","id":"java/iterable-wraps-iterator","kind":"problem","name":"Iterable wrapping an iterator","precision":"very-high","problem.severity":"warning"}},{"id":"java/iterator-implements-iterable","name":"java/iterator-implements-iterable","shortDescription":{"text":"Iterator implementing Iterable"},"fullDescription":{"text":"An 'Iterator' that also implements 'Iterable' by returning itself as its 'Iterator' does not support multiple traversals. This can lead to unexpected behavior when it is viewed as an 'Iterable'."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness"],"description":"An 'Iterator' that also implements 'Iterable' by returning itself as its 'Iterator'\n              does not support multiple traversals. This can lead to unexpected behavior when\n              it is viewed as an 'Iterable'.","id":"java/iterator-implements-iterable","kind":"problem","name":"Iterator implementing Iterable","precision":"very-high","problem.severity":"warning"}},{"id":"java/non-static-nested-class","name":"java/non-static-nested-class","shortDescription":{"text":"Inner class could be static"},"fullDescription":{"text":"A non-static nested class keeps a reference to the enclosing object, which makes the nested class bigger and may cause a memory leak."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability"],"description":"A non-static nested class keeps a reference to the enclosing object,\n              which makes the nested class bigger and may cause a memory leak.","id":"java/non-static-nested-class","kind":"problem","name":"Inner class could be static","precision":"high","problem.severity":"recommendation"}},{"id":"java/string-replace-all-with-non-regex","name":"java/string-replace-all-with-non-regex","shortDescription":{"text":"Use of `String#replaceAll` with a first argument which is not a regular expression"},"fullDescription":{"text":"Using `String#replaceAll` with a first argument which is not a regular expression is less efficient than using `String#replace`."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","reliability","performance","external/cwe/cwe-1176"],"description":"Using `String#replaceAll` with a first argument which is not a regular expression\n              is less efficient than using `String#replace`.","id":"java/string-replace-all-with-non-regex","kind":"problem","name":"Use of `String#replaceAll` with a first argument which is not a regular expression","precision":"very-high","problem.severity":"recommendation"}},{"id":"java/inefficient-key-set-iterator","name":"java/inefficient-key-set-iterator","shortDescription":{"text":"Inefficient use of key set iterator"},"fullDescription":{"text":"Iterating through the values of a map using the key set is inefficient."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","reliability","performance"],"description":"Iterating through the values of a map using the key set is inefficient.","id":"java/inefficient-key-set-iterator","kind":"problem","name":"Inefficient use of key set iterator","precision":"high","problem.severity":"recommendation"}},{"id":"java/inefficient-empty-string-test","name":"java/inefficient-empty-string-test","shortDescription":{"text":"Inefficient empty string test"},"fullDescription":{"text":"Checking a string for equality with an empty string is inefficient."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability"],"description":"Checking a string for equality with an empty string is inefficient.","id":"java/inefficient-empty-string-test","kind":"problem","name":"Inefficient empty string test","precision":"high","problem.severity":"recommendation"}},{"id":"java/inefficient-output-stream","name":"java/inefficient-output-stream","shortDescription":{"text":"Inefficient output stream"},"fullDescription":{"text":"Using the default implementation of 'write(byte[],int,int)' provided by 'java.io.OutputStream' is very inefficient."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","performance","efficiency"],"description":"Using the default implementation of 'write(byte[],int,int)'\n              provided by 'java.io.OutputStream' is very inefficient.","id":"java/inefficient-output-stream","kind":"problem","name":"Inefficient output stream","precision":"very-high","problem.severity":"warning"}},{"id":"java/inefficient-string-constructor","name":"java/inefficient-string-constructor","shortDescription":{"text":"Inefficient String constructor"},"fullDescription":{"text":"Using the 'String(String)' constructor is less memory efficient than using the constructor argument directly."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability"],"description":"Using the 'String(String)' constructor is less memory efficient than using the\n              constructor argument directly.","id":"java/inefficient-string-constructor","kind":"problem","name":"Inefficient String constructor","precision":"high","problem.severity":"recommendation"}},{"id":"java/inefficient-boxed-constructor","name":"java/inefficient-boxed-constructor","shortDescription":{"text":"Inefficient primitive constructor"},"fullDescription":{"text":"Calling the constructor of a boxed type is inefficient."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","reliability","performance","efficiency"],"description":"Calling the constructor of a boxed type is inefficient.","id":"java/inefficient-boxed-constructor","kind":"problem","name":"Inefficient primitive constructor","precision":"high","problem.severity":"recommendation"}},{"id":"java/unknown-javadoc-parameter","name":"java/unknown-javadoc-parameter","shortDescription":{"text":"Spurious Javadoc @param tags"},"fullDescription":{"text":"Javadoc @param tags that do not match any parameters in the method or constructor or any type parameters of the annotated class are confusing."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability"],"description":"Javadoc @param tags that do not match any parameters in the method or constructor or\n              any type parameters of the annotated class are confusing.","id":"java/unknown-javadoc-parameter","kind":"problem","name":"Spurious Javadoc @param tags","precision":"very-high","problem.severity":"recommendation"}},{"id":"java/inconsistent-javadoc-throws","name":"java/inconsistent-javadoc-throws","shortDescription":{"text":"Javadoc has impossible 'throws' tag"},"fullDescription":{"text":"Javadoc that incorrectly claims a method or constructor can throw an exception is misleading."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability"],"description":"Javadoc that incorrectly claims a method or constructor can throw an exception\n              is misleading.","id":"java/inconsistent-javadoc-throws","kind":"problem","name":"Javadoc has impossible 'throws' tag","precision":"high","problem.severity":"recommendation"}},{"id":"java/missing-override-annotation","name":"java/missing-override-annotation","shortDescription":{"text":"Missing Override annotation"},"fullDescription":{"text":"A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability"],"description":"A method that overrides a method in a superclass but does not have an 'Override'\n              annotation cannot take advantage of compiler checks, and makes code less readable.","id":"java/missing-override-annotation","kind":"problem","name":"Missing Override annotation","precision":"high","problem.severity":"recommendation"}},{"id":"java/dereferenced-expr-may-be-null","name":"java/dereferenced-expr-may-be-null","shortDescription":{"text":"Dereferenced expression may be null"},"fullDescription":{"text":"Dereferencing an expression whose value may be 'null' may cause a 'NullPointerException'."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness","exceptions","external/cwe/cwe-476"],"description":"Dereferencing an expression whose value may be 'null' may cause a\n              'NullPointerException'.","id":"java/dereferenced-expr-may-be-null","kind":"problem","name":"Dereferenced expression may be null","precision":"high","problem.severity":"warning"}},{"id":"java/dereferenced-value-is-always-null","name":"java/dereferenced-value-is-always-null","shortDescription":{"text":"Dereferenced variable is always null"},"fullDescription":{"text":"Dereferencing a variable whose value is 'null' causes a 'NullPointerException'."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","exceptions","external/cwe/cwe-476"],"description":"Dereferencing a variable whose value is 'null' causes a 'NullPointerException'.","id":"java/dereferenced-value-is-always-null","kind":"problem","name":"Dereferenced variable is always null","precision":"very-high","problem.severity":"error"}},{"id":"java/dereferenced-value-may-be-null","name":"java/dereferenced-value-may-be-null","shortDescription":{"text":"Dereferenced variable may be null"},"fullDescription":{"text":"Dereferencing a variable whose value may be 'null' may cause a 'NullPointerException'."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness","exceptions","external/cwe/cwe-476","non-local"],"description":"Dereferencing a variable whose value may be 'null' may cause a\n              'NullPointerException'.","id":"java/dereferenced-value-may-be-null","kind":"problem","name":"Dereferenced variable may be null","precision":"high","problem.severity":"warning"}},{"id":"java/constant-loop-condition","name":"java/constant-loop-condition","shortDescription":{"text":"Constant loop condition"},"fullDescription":{"text":"A loop condition that remains constant throughout the iteration indicates faulty logic and is likely to cause infinite looping."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness","external/cwe/cwe-835"],"description":"A loop condition that remains constant throughout the iteration\n              indicates faulty logic and is likely to cause infinite\n              looping.","id":"java/constant-loop-condition","kind":"problem","name":"Constant loop condition","precision":"very-high","problem.severity":"warning"}},{"id":"java/missing-format-argument","name":"java/missing-format-argument","shortDescription":{"text":"Missing format argument"},"fullDescription":{"text":"A format call with an insufficient number of arguments causes an 'IllegalFormatException'."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","external/cwe/cwe-685"],"description":"A format call with an insufficient number of arguments causes\n              an 'IllegalFormatException'.","id":"java/missing-format-argument","kind":"problem","name":"Missing format argument","precision":"very-high","problem.severity":"error"}},{"id":"java/string-buffer-char-init","name":"java/string-buffer-char-init","shortDescription":{"text":"Character passed to StringBuffer or StringBuilder constructor"},"fullDescription":{"text":"A character value is passed to the constructor of 'StringBuffer' or 'StringBuilder'. This value will be converted to an integer and interpreted as the buffer's initial capacity, which is probably not intended."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness"],"description":"A character value is passed to the constructor of 'StringBuffer' or 'StringBuilder'. This value will\n              be converted to an integer and interpreted as the buffer's initial capacity, which is probably not intended.","id":"java/string-buffer-char-init","kind":"problem","name":"Character passed to StringBuffer or StringBuilder constructor","precision":"very-high","problem.severity":"error"}},{"id":"java/test-for-negative-container-size","name":"java/test-for-negative-container-size","shortDescription":{"text":"Container size compared to zero"},"fullDescription":{"text":"Comparing the size of a container to zero with this operator will always return the same value."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness","logic"],"description":"Comparing the size of a container to zero with this operator will always return the same value.","id":"java/test-for-negative-container-size","kind":"problem","name":"Container size compared to zero","precision":"very-high","problem.severity":"warning"}},{"id":"java/unused-format-argument","name":"java/unused-format-argument","shortDescription":{"text":"Unused format argument"},"fullDescription":{"text":"A format call with a format string that refers to fewer arguments than the number of supplied arguments will silently ignore the additional arguments."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","maintainability","useless-code","external/cwe/cwe-685"],"description":"A format call with a format string that refers to fewer\n              arguments than the number of supplied arguments will silently\n              ignore the additional arguments.","id":"java/unused-format-argument","kind":"problem","name":"Unused format argument","precision":"very-high","problem.severity":"warning"}},{"id":"java/redundant-assignment","name":"java/redundant-assignment","shortDescription":{"text":"Self assignment"},"fullDescription":{"text":"Assigning a variable to itself has no effect."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","logic"],"description":"Assigning a variable to itself has no effect.","id":"java/redundant-assignment","kind":"problem","name":"Self assignment","precision":"very-high","problem.severity":"error"}},{"id":"java/missing-space-in-concatenation","name":"java/missing-space-in-concatenation","shortDescription":{"text":"Missing space in string literal"},"fullDescription":{"text":"Joining strings at compile-time to construct a string literal so that two words are concatenated without a separating space usually indicates a text error."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","maintainability","readability"],"description":"Joining strings at compile-time to construct a string literal\n              so that two words are concatenated without a separating space\n              usually indicates a text error.","id":"java/missing-space-in-concatenation","kind":"problem","name":"Missing space in string literal","precision":"very-high","problem.severity":"recommendation"}},{"id":"java/suspicious-date-format","name":"java/suspicious-date-format","shortDescription":{"text":"Suspicious date format"},"fullDescription":{"text":"Using a data format that includes both 'M' and 'Y' is likely to give unexpected results."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness"],"description":"Using a data format that includes both 'M' and 'Y' is likely to give unexpected results.","id":"java/suspicious-date-format","kind":"problem","name":"Suspicious date format","precision":"high","problem.severity":"warning"}},{"id":"java/contradictory-type-checks","name":"java/contradictory-type-checks","shortDescription":{"text":"Contradictory type checks"},"fullDescription":{"text":"Contradictory dynamic type checks in `instanceof` expressions and casts may cause dead code or even runtime errors, and usually indicate a logic error."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","logic"],"description":"Contradictory dynamic type checks in `instanceof` expressions\n              and casts may cause dead code or even runtime errors, and usually\n              indicate a logic error.","id":"java/contradictory-type-checks","kind":"problem","name":"Contradictory type checks","precision":"very-high","problem.severity":"error"}},{"id":"java/unsafe-double-checked-locking","name":"java/unsafe-double-checked-locking","shortDescription":{"text":"Double-checked locking is not thread-safe"},"fullDescription":{"text":"A repeated check on a non-volatile field is not thread-safe, and could result in unexpected behavior."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","concurrency","external/cwe/cwe-609"],"description":"A repeated check on a non-volatile field is not thread-safe, and\n              could result in unexpected behavior.","id":"java/unsafe-double-checked-locking","kind":"problem","name":"Double-checked locking is not thread-safe","precision":"high","problem.severity":"error"}},{"id":"java/call-to-thread-run","name":"java/call-to-thread-run","shortDescription":{"text":"Direct call to a run() method"},"fullDescription":{"text":"Directly calling a 'Thread' object's 'run' method does not start a separate thread but executes the method within the current thread."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","reliability","concurrency","external/cwe/cwe-572"],"description":"Directly calling a 'Thread' object's 'run' method does not start a separate thread\n              but executes the method within the current thread.","id":"java/call-to-thread-run","kind":"problem","name":"Direct call to a run() method","precision":"high","previous-id":"java/run-method-called-on-java-lang-thread-directly","problem.severity":"recommendation"}},{"id":"java/unsynchronized-getter","name":"java/unsynchronized-getter","shortDescription":{"text":"Inconsistent synchronization of getter and setter"},"fullDescription":{"text":"If a class has a synchronized 'set' method, and a similarly-named 'get' method is not also synchronized, calls to the 'get' method may not return a consistent state for the object."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","concurrency","language-features","external/cwe/cwe-413","external/cwe/cwe-662"],"description":"If a class has a synchronized 'set' method, and a similarly-named 'get' method is\n              not also synchronized, calls to the 'get' method may not return a consistent state\n              for the object.","id":"java/unsynchronized-getter","kind":"problem","name":"Inconsistent synchronization of getter and setter","precision":"very-high","problem.severity":"error"}},{"id":"java/unsafe-double-checked-locking-init-order","name":"java/unsafe-double-checked-locking-init-order","shortDescription":{"text":"Race condition in double-checked locking object initialization"},"fullDescription":{"text":"Performing additional initialization on an object after assignment to a shared variable guarded by double-checked locking is not thread-safe, and could result in unexpected behavior."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","concurrency","external/cwe/cwe-609"],"description":"Performing additional initialization on an object after\n              assignment to a shared variable guarded by double-checked\n              locking is not thread-safe, and could result in unexpected\n              behavior.","id":"java/unsafe-double-checked-locking-init-order","kind":"problem","name":"Race condition in double-checked locking object initialization","precision":"high","problem.severity":"warning"}},{"id":"java/java-util-concurrent-scheduledthreadpoolexecutor","name":"java/java-util-concurrent-scheduledthreadpoolexecutor","shortDescription":{"text":"Zero threads set for `java.util.concurrent.ScheduledThreadPoolExecutor`"},"fullDescription":{"text":"Setting `java.util.concurrent.ScheduledThreadPoolExecutor` to have 0 threads serves no purpose and may indicate programmer error."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["quality","reliability","correctness","concurrency"],"description":"Setting `java.util.concurrent.ScheduledThreadPoolExecutor` to have 0 threads serves\n              no purpose and may indicate programmer error.","id":"java/java-util-concurrent-scheduledthreadpoolexecutor","kind":"problem","name":"Zero threads set for `java.util.concurrent.ScheduledThreadPoolExecutor`","precision":"very-high","previous-id":"java/javautilconcurrentscheduledthreadpoolexecutor","problem.severity":"recommendation"}},{"id":"java/sync-on-boxed-types","name":"java/sync-on-boxed-types","shortDescription":{"text":"Synchronization on boxed types or strings"},"fullDescription":{"text":"Synchronizing on boxed types or strings may lead to deadlock since an instance of that type is likely to be shared between many parts of the program."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","concurrency","language-features","external/cwe/cwe-662"],"description":"Synchronizing on boxed types or strings may lead to\n              deadlock since an instance of that type is likely to\n              be shared between many parts of the program.","id":"java/sync-on-boxed-types","kind":"problem","name":"Synchronization on boxed types or strings","precision":"very-high","problem.severity":"error"}},{"id":"java/non-sync-override","name":"java/non-sync-override","shortDescription":{"text":"Non-synchronized override of synchronized method"},"fullDescription":{"text":"If a synchronized method is overridden in a subclass, and the overriding method is not synchronized, the thread-safety of the subclass may be broken."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","concurrency","language-features","external/cwe/cwe-820"],"description":"If a synchronized method is overridden in a subclass, and the overriding method is\n              not synchronized, the thread-safety of the subclass may be broken.","id":"java/non-sync-override","kind":"problem","name":"Non-synchronized override of synchronized method","precision":"very-high","problem.severity":"warning"}},{"id":"java/unreachable-catch-clause","name":"java/unreachable-catch-clause","shortDescription":{"text":"Unreachable catch clause"},"fullDescription":{"text":"An unreachable 'catch' clause may indicate a mistake in exception handling or may be unnecessary."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness","exceptions","external/cwe/cwe-561"],"description":"An unreachable 'catch' clause may indicate a mistake in exception handling or may\n              be unnecessary.","id":"java/unreachable-catch-clause","kind":"problem","name":"Unreachable catch clause","precision":"high","problem.severity":"warning"}},{"id":"java/continue-in-false-loop","name":"java/continue-in-false-loop","shortDescription":{"text":"Continue statement that does not continue"},"fullDescription":{"text":"A 'continue' statement only re-runs the loop if the loop-condition is true. Therefore using 'continue' in a loop with a constant false condition is misleading and usually a bug."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness"],"description":"A 'continue' statement only re-runs the loop if the\n              loop-condition is true. Therefore using 'continue' in a loop\n              with a constant false condition is misleading and usually a\n              bug.","id":"java/continue-in-false-loop","kind":"problem","name":"Continue statement that does not continue","precision":"high","problem.severity":"warning"}},{"id":"java/misleading-indentation","name":"java/misleading-indentation","shortDescription":{"text":"Misleading indentation"},"fullDescription":{"text":"If a control structure does not use braces, misleading indentation makes it difficult to see which statements are within its scope."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","maintainability","readability","correctness","logic"],"description":"If a control structure does not use braces, misleading indentation makes it\n              difficult to see which statements are within its scope.","id":"java/misleading-indentation","kind":"problem","name":"Misleading indentation","precision":"very-high","problem.severity":"warning"}},{"id":"java/non-final-call-in-constructor","name":"java/non-final-call-in-constructor","shortDescription":{"text":"Non-final method invocation in constructor"},"fullDescription":{"text":"If a constructor calls a method that is overridden in a subclass, the result can be unpredictable."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","logic"],"description":"If a constructor calls a method that is overridden in a subclass, the result can be\n              unpredictable.","id":"java/non-final-call-in-constructor","kind":"problem","name":"Non-final method invocation in constructor","precision":"very-high","problem.severity":"error"}},{"id":"java/whitespace-contradicts-precedence","name":"java/whitespace-contradicts-precedence","shortDescription":{"text":"Whitespace contradicts operator precedence"},"fullDescription":{"text":"Nested expressions where the formatting contradicts the grouping enforced by operator precedence are difficult to read and may even indicate a bug."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness","external/cwe/cwe-783"],"description":"Nested expressions where the formatting contradicts the grouping enforced by operator precedence\n              are difficult to read and may even indicate a bug.","id":"java/whitespace-contradicts-precedence","kind":"problem","name":"Whitespace contradicts operator precedence","precision":"very-high","problem.severity":"warning"}},{"id":"java/integer-multiplication-cast-to-long","name":"java/integer-multiplication-cast-to-long","shortDescription":{"text":"Result of multiplication cast to wider type"},"fullDescription":{"text":"Casting the result of a multiplication to a wider type instead of casting before the multiplication may cause overflow."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness","types","external/cwe/cwe-190","external/cwe/cwe-192","external/cwe/cwe-197","external/cwe/cwe-681"],"description":"Casting the result of a multiplication to a wider type instead of casting\n              before the multiplication may cause overflow.","id":"java/integer-multiplication-cast-to-long","kind":"problem","name":"Result of multiplication cast to wider type","precision":"very-high","problem.severity":"warning"}},{"id":"java/lshift-larger-than-type-width","name":"java/lshift-larger-than-type-width","shortDescription":{"text":"Left shift by more than the type width"},"fullDescription":{"text":"Left-shifting an integer by more than its type width indicates a mistake."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness"],"description":"Left-shifting an integer by more than its type width indicates a mistake.","id":"java/lshift-larger-than-type-width","kind":"problem","name":"Left shift by more than the type width","precision":"very-high","problem.severity":"warning"}},{"id":"java/evaluation-to-constant","name":"java/evaluation-to-constant","shortDescription":{"text":"Expression always evaluates to the same value"},"fullDescription":{"text":"An expression that always evaluates to the same value, but which has a non-constant subexpression, indicates a mistake."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness"],"description":"An expression that always evaluates to the same value, but which has a non-constant subexpression, indicates a mistake.","id":"java/evaluation-to-constant","kind":"problem","name":"Expression always evaluates to the same value","precision":"very-high","problem.severity":"warning"}},{"id":"java/database-resource-leak","name":"java/database-resource-leak","shortDescription":{"text":"Potential database resource leak"},"fullDescription":{"text":"A database resource that is opened but not closed may cause a resource leak."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","performance","resources","external/cwe/cwe-404","external/cwe/cwe-772"],"description":"A database resource that is opened but not closed may cause a resource leak.","id":"java/database-resource-leak","kind":"problem","name":"Potential database resource leak","precision":"high","problem.severity":"warning"}},{"id":"java/output-resource-leak","name":"java/output-resource-leak","shortDescription":{"text":"Potential output resource leak"},"fullDescription":{"text":"A resource that is opened for writing but not closed may cause a resource leak."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","performance","efficiency","resources","external/cwe/cwe-404","external/cwe/cwe-772"],"description":"A resource that is opened for writing but not closed may cause a resource\n              leak.","id":"java/output-resource-leak","kind":"problem","name":"Potential output resource leak","precision":"high","problem.severity":"warning"}},{"id":"java/input-resource-leak","name":"java/input-resource-leak","shortDescription":{"text":"Potential input resource leak"},"fullDescription":{"text":"A resource that is opened for reading but not closed may cause a resource leak."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","performance","efficiency","resources","external/cwe/cwe-404","external/cwe/cwe-772"],"description":"A resource that is opened for reading but not closed may cause a resource\n              leak.","id":"java/input-resource-leak","kind":"problem","name":"Potential input resource leak","precision":"high","problem.severity":"warning"}},{"id":"java/equals-on-unrelated-types","name":"java/equals-on-unrelated-types","shortDescription":{"text":"Equals on incomparable types"},"fullDescription":{"text":"Calls of the form 'x.equals(y)', where the types of 'x' and 'y' are incomparable, should always return 'false'."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","external/cwe/cwe-571"],"description":"Calls of the form 'x.equals(y)', where the types of 'x' and 'y' are incomparable,\n              should always return 'false'.","id":"java/equals-on-unrelated-types","kind":"problem","name":"Equals on incomparable types","precision":"very-high","problem.severity":"error"}},{"id":"java/constant-comparison","name":"java/constant-comparison","shortDescription":{"text":"Useless comparison test"},"fullDescription":{"text":"A comparison operation that always evaluates to true or always evaluates to false may indicate faulty logic and may result in dead code."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness","logic","external/cwe/cwe-570","external/cwe/cwe-571"],"description":"A comparison operation that always evaluates to true or always\n              evaluates to false may indicate faulty logic and may result in\n              dead code.","id":"java/constant-comparison","kind":"problem","name":"Useless comparison test","precision":"very-high","problem.severity":"warning"}},{"id":"java/equals-on-arrays","name":"java/equals-on-arrays","shortDescription":{"text":"Equals or hashCode on arrays"},"fullDescription":{"text":"The 'equals' and 'hashCode' methods on arrays only consider object identity, not array contents, which is unlikely to be what is intended."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness"],"description":"The 'equals' and 'hashCode' methods on arrays only consider object identity, not\n              array contents, which is unlikely to be what is intended.","id":"java/equals-on-arrays","kind":"problem","name":"Equals or hashCode on arrays","precision":"very-high","problem.severity":"error"}},{"id":"java/unchecked-cast-in-equals","name":"java/unchecked-cast-in-equals","shortDescription":{"text":"Equals method does not inspect argument type"},"fullDescription":{"text":"An implementation of 'equals' that does not check the type of its argument may lead to failing casts."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness"],"description":"An implementation of 'equals' that does not check the type\n              of its argument may lead to failing casts.","id":"java/unchecked-cast-in-equals","kind":"problem","name":"Equals method does not inspect argument type","precision":"high","problem.severity":"error"}},{"id":"java/comparison-with-nan","name":"java/comparison-with-nan","shortDescription":{"text":"Wrong NaN comparison"},"fullDescription":{"text":"A comparison with 'NaN' using '==' or '!=' will always yield the same result and is unlikely to be intended."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness"],"description":"A comparison with 'NaN' using '==' or '!=' will always yield the same result\n              and is unlikely to be intended.","id":"java/comparison-with-nan","kind":"problem","name":"Wrong NaN comparison","precision":"very-high","problem.severity":"error"}},{"id":"java/inconsistent-equals-and-hashcode","name":"java/inconsistent-equals-and-hashcode","shortDescription":{"text":"Inconsistent equals and hashCode"},"fullDescription":{"text":"If a class overrides only one of 'equals' and 'hashCode', it may mean that 'equals' and 'hashCode' are inconsistent."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","external/cwe/cwe-581"],"description":"If a class overrides only one of 'equals' and 'hashCode', it may mean that\n              'equals' and 'hashCode' are inconsistent.","id":"java/inconsistent-equals-and-hashcode","kind":"problem","name":"Inconsistent equals and hashCode","precision":"very-high","problem.severity":"error"}},{"id":"java/hashing-without-hashcode","name":"java/hashing-without-hashcode","shortDescription":{"text":"Hashed value without hashCode definition"},"fullDescription":{"text":"Classes that define an 'equals' method but no 'hashCode' method, and whose instances are stored in a hashing data structure, can lead to unexpected results."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness"],"description":"Classes that define an 'equals' method but no 'hashCode' method, and whose instances\n              are stored in a hashing data structure, can lead to unexpected results.","id":"java/hashing-without-hashcode","kind":"problem","name":"Hashed value without hashCode definition","precision":"very-high","problem.severity":"error"}},{"id":"java/reference-equality-of-boxed-types","name":"java/reference-equality-of-boxed-types","shortDescription":{"text":"Reference equality test of boxed types"},"fullDescription":{"text":"Comparing two boxed primitive values using the == or != operator compares object identity, which may not be intended."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","external/cwe/cwe-595"],"description":"Comparing two boxed primitive values using the == or != operator\n              compares object identity, which may not be intended.","id":"java/reference-equality-of-boxed-types","kind":"problem","name":"Reference equality test of boxed types","precision":"very-high","problem.severity":"error"}},{"id":"java/comparison-of-identical-expressions","name":"java/comparison-of-identical-expressions","shortDescription":{"text":"Comparison of identical values"},"fullDescription":{"text":"If the same expression occurs on both sides of a comparison operator, the operator is redundant, and probably indicates a mistake."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","logic"],"description":"If the same expression occurs on both sides of a comparison\n              operator, the operator is redundant, and probably indicates a mistake.","id":"java/comparison-of-identical-expressions","kind":"problem","name":"Comparison of identical values","precision":"very-high","problem.severity":"error"}},{"id":"java/junit5-missing-nested-annotation","name":"java/junit5-missing-nested-annotation","shortDescription":{"text":"Missing `@Nested` annotation on JUnit 5 inner test class"},"fullDescription":{"text":"A JUnit 5 inner test class that is missing a `@Nested` annotation will be excluded from execution and may indicate a mistake from the programmer."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["quality","reliability","correctness","testability","frameworks/junit"],"description":"A JUnit 5 inner test class that is missing a `@Nested` annotation will be\n              excluded from execution and may indicate a mistake from the\n              programmer.","id":"java/junit5-missing-nested-annotation","kind":"problem","name":"Missing `@Nested` annotation on JUnit 5 inner test class","precision":"very-high","previous-id":"java/junit5-non-static-inner-class-missing-nested-annotation","problem.severity":"warning"}},{"id":"java/type-mismatch-modification","name":"java/type-mismatch-modification","shortDescription":{"text":"Type mismatch on container modification"},"fullDescription":{"text":"Calling container modification methods such as 'Collection.remove' or 'Map.remove' with an object of a type that is incompatible with the corresponding container element type is unlikely to have any effect."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","logic"],"description":"Calling container modification methods such as 'Collection.remove'\n              or 'Map.remove' with an object of a type that is incompatible with\n              the corresponding container element type is unlikely to have any effect.","id":"java/type-mismatch-modification","kind":"problem","name":"Type mismatch on container modification","precision":"very-high","problem.severity":"error"}},{"id":"java/type-mismatch-access","name":"java/type-mismatch-access","shortDescription":{"text":"Type mismatch on container access"},"fullDescription":{"text":"Calling container access methods such as 'Collection.contains' or 'Map.get' with an object of a type that is incompatible with the corresponding container element type is unlikely to return 'true'."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","logic"],"description":"Calling container access methods such as 'Collection.contains'\n              or 'Map.get' with an object of a type that is incompatible with\n              the corresponding container element type is unlikely to return 'true'.","id":"java/type-mismatch-access","kind":"problem","name":"Type mismatch on container access","precision":"very-high","problem.severity":"error"}},{"id":"java/empty-container","name":"java/empty-container","shortDescription":{"text":"Container contents are never initialized"},"fullDescription":{"text":"Querying the contents of a collection or map that is never initialized is not normally useful."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","external/cwe/cwe-561"],"description":"Querying the contents of a collection or map that is never initialized is not normally useful.","id":"java/empty-container","kind":"problem","name":"Container contents are never initialized","precision":"very-high","problem.severity":"error"}},{"id":"java/unused-container","name":"java/unused-container","shortDescription":{"text":"Container contents are never accessed"},"fullDescription":{"text":"A collection or map whose contents are never queried or accessed is useless."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","maintainability","useless-code","external/cwe/cwe-561"],"description":"A collection or map whose contents are never queried or accessed is useless.","id":"java/unused-container","kind":"problem","name":"Container contents are never accessed","precision":"very-high","problem.severity":"error"}},{"id":"java/index-out-of-bounds","name":"java/index-out-of-bounds","shortDescription":{"text":"Array index out of bounds"},"fullDescription":{"text":"Accessing an array with an index that is greater than or equal to the length of the array causes an 'ArrayIndexOutOfBoundsException'."},"defaultConfiguration":{"enabled":true,"level":"error"},"properties":{"tags":["quality","reliability","correctness","exceptions","external/cwe/cwe-193"],"description":"Accessing an array with an index that is greater than or equal to the\n              length of the array causes an 'ArrayIndexOutOfBoundsException'.","id":"java/index-out-of-bounds","kind":"problem","name":"Array index out of bounds","precision":"high","problem.severity":"error"}}]},"extensions":[{"name":"codeql/java-queries","semanticVersion":"1.6.1+bb0173c9af72a9dd562ae6f33e24c82bc5edcc94","locations":[{"uri":"file:///usr/local/bin/codeql/qlpacks/codeql/java-queries/1.6.1/","description":{"text":"The QL pack root directory."},"properties":{"tags":["CodeQL/LocalPackRoot"]}},{"uri":"file:///usr/local/bin/codeql/qlpacks/codeql/java-queries/1.6.1/qlpack.yml","description":{"text":"The QL pack definition file."},"properties":{"tags":["CodeQL/LocalPackDefinitionFile"]}}]},{"name":"codeql/java-all","semanticVersion":"7.3.3+bb0173c9af72a9dd562ae6f33e24c82bc5edcc94","locations":[{"uri":"file:///usr/local/bin/codeql/qlpacks/codeql/java-queries/1.6.1/.codeql/libraries/codeql/java-all/7.3.3/","description":{"text":"The QL pack root directory."},"properties":{"tags":["CodeQL/LocalPackRoot"]}},{"uri":"file:///usr/local/bin/codeql/qlpacks/codeql/java-queries/1.6.1/.codeql/libraries/codeql/java-all/7.3.3/qlpack.yml","description":{"text":"The QL pack definition file."},"properties":{"tags":["CodeQL/LocalPackDefinitionFile"]}}]},{"name":"codeql/threat-models","semanticVersion":"1.0.27+bb0173c9af72a9dd562ae6f33e24c82bc5edcc94","locations":[{"uri":"file:///usr/local/bin/codeql/qlpacks/codeql/java-queries/1.6.1/.codeql/libraries/codeql/threat-models/1.0.27/","description":{"text":"The QL pack root directory."},"properties":{"tags":["CodeQL/LocalPackRoot"]}},{"uri":"file:///usr/local/bin/codeql/qlpacks/codeql/java-queries/1.6.1/.codeql/libraries/codeql/threat-models/1.0.27/qlpack.yml","description":{"text":"The QL pack definition file."},"properties":{"tags":["CodeQL/LocalPackDefinitionFile"]}}]}]},"invocations":[{"toolExecutionNotifications":[{"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario4/NonCompliant_FinalizeViaReflection.java","uriBaseId":"%SRCROOT%","index":3}}}],"message":{"text":""},"level":"none","descriptor":{"id":"java/baseline/expected-extracted-files","index":0},"properties":{"formattedMessage":{"text":""}}},{"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario1/NonCompliant_FinalizeViaReflection.java","uriBaseId":"%SRCROOT%","index":1}}}],"message":{"text":""},"level":"none","descriptor":{"id":"java/baseline/expected-extracted-files","index":0},"properties":{"formattedMessage":{"text":""}}},{"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/test/java/com/loginsoft/research/nc_rule5/NcRule5ApplicationTests.java","uriBaseId":"%SRCROOT%","index":5}}}],"message":{"text":""},"level":"none","descriptor":{"id":"java/baseline/expected-extracted-files","index":0},"properties":{"formattedMessage":{"text":""}}},{"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/NcRule5Application.java","uriBaseId":"%SRCROOT%","index":6}}}],"message":{"text":""},"level":"none","descriptor":{"id":"java/baseline/expected-extracted-files","index":0},"properties":{"formattedMessage":{"text":""}}},{"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario2/NonCompliant_PrivateFinalizeMethod.java","uriBaseId":"%SRCROOT%","index":2}}}],"message":{"text":""},"level":"none","descriptor":{"id":"java/baseline/expected-extracted-files","index":0},"properties":{"formattedMessage":{"text":""}}},{"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario1/Compliant_NoFinalizeCall.java","uriBaseId":"%SRCROOT%","index":7}}}],"message":{"text":""},"level":"none","descriptor":{"id":"java/baseline/expected-extracted-files","index":0},"properties":{"formattedMessage":{"text":""}}},{"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario3/NonCompliant_EmptyFinalizeWithNoise.java","uriBaseId":"%SRCROOT%","index":0}}}],"message":{"text":""},"level":"none","descriptor":{"id":"java/baseline/expected-extracted-files","index":0},"properties":{"formattedMessage":{"text":""}}},{"message":{"text":"On the Mac OS X (aarch64; 15.5) platform.","markdown":"On the Mac OS X (aarch64; 15.5) platform."},"level":"none","timeUtc":"2025-07-14T09:52:22.169992Z","descriptor":{"id":"cli/platform","index":1},"properties":{"attributes":{"arch":"aarch64","name":"Mac OS X","version":"15.5"},"visibility":{"statusPage":false,"telemetry":true}}},{"message":{"text":""},"level":"note","timeUtc":"2025-07-14T09:52:22.192102Z","descriptor":{"id":"cli/sip-enablement","index":2},"properties":{"attributes":{"isEnabled":true},"visibility":{"statusPage":false,"telemetry":true}}}],"executionSuccessful":true}],"artifacts":[{"location":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario3/NonCompliant_EmptyFinalizeWithNoise.java","uriBaseId":"%SRCROOT%","index":0}},{"location":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario1/NonCompliant_FinalizeViaReflection.java","uriBaseId":"%SRCROOT%","index":1}},{"location":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario2/NonCompliant_PrivateFinalizeMethod.java","uriBaseId":"%SRCROOT%","index":2}},{"location":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario4/NonCompliant_FinalizeViaReflection.java","uriBaseId":"%SRCROOT%","index":3}},{"location":{"uri":"file:/JKLMN/java.base/java/lang/Object.sig","index":4}},{"location":{"uri":"src/test/java/com/loginsoft/research/nc_rule5/NcRule5ApplicationTests.java","uriBaseId":"%SRCROOT%","index":5}},{"location":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/NcRule5Application.java","uriBaseId":"%SRCROOT%","index":6}},{"location":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario1/Compliant_NoFinalizeCall.java","uriBaseId":"%SRCROOT%","index":7}}],"results":[{"ruleId":"java/local-variable-is-never-read","ruleIndex":19,"rule":{"id":"java/local-variable-is-never-read","index":19},"message":{"text":"Variable 'boolean noop' is never read."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario3/NonCompliant_EmptyFinalizeWithNoise.java","uriBaseId":"%SRCROOT%","index":0},"region":{"startLine":7,"startColumn":9,"endColumn":29}}}],"partialFingerprints":{"primaryLocationLineHash":"effcb4c2fbdd1057:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"java/unused-parameter","ruleIndex":21,"rule":{"id":"java/unused-parameter","index":21},"message":{"text":"The parameter 'status' is never used."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario1/NonCompliant_FinalizeViaReflection.java","uriBaseId":"%SRCROOT%","index":1},"region":{"startLine":9,"startColumn":26,"endColumn":36}}}],"partialFingerprints":{"primaryLocationLineHash":"92a9dfa90be7b76f:1","primaryLocationStartColumnFingerprint":"21"}},{"ruleId":"java/unused-parameter","ruleIndex":21,"rule":{"id":"java/unused-parameter","index":21},"message":{"text":"The parameter 'msg' is never used."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario2/NonCompliant_PrivateFinalizeMethod.java","uriBaseId":"%SRCROOT%","index":2},"region":{"startLine":5,"startColumn":26,"endColumn":36}}}],"partialFingerprints":{"primaryLocationLineHash":"604b975c37d8a59d:1","primaryLocationStartColumnFingerprint":"21"}},{"ruleId":"java/missing-override-annotation","ruleIndex":37,"rule":{"id":"java/missing-override-annotation","index":37},"message":{"text":"This method overrides [Object.finalize](1); it is advisable to add an Override annotation."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/com/loginsoft/research/nc_rule5/scenario4/NonCompliant_FinalizeViaReflection.java","uriBaseId":"%SRCROOT%","index":3},"region":{"startLine":7,"startColumn":17,"endColumn":25}}}],"partialFingerprints":{"primaryLocationLineHash":"68ba56404fd45654:1","primaryLocationStartColumnFingerprint":"12"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"file:/JKLMN/java.base/java/lang/Object.sig","index":4}},"message":{"text":"Object.finalize"}}]}],"columnKind":"utf16CodeUnits","properties":{"semmle.formatSpecifier":"sarif-latest"}}]}